{"ast":null,"code":"var _jsxFileName = \"D:\\\\FACUL\\\\Terceiro per\\xEDodo\\\\TIAPN\\\\2025-1-p3-tiapn-si-grupo-3\\\\src\\\\front\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/forgot.css'; // Importa os estilos CSS\n\n/**\r\n * Componente para a funcionalidade de esqueci a senha.\r\n * Permite que o usuário insira seu e-mail para receber instruções de redefinição.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState(''); // Estado para mensagens de feedback ao usuário\n  const [messageType, setMessageType] = useState(''); // 'success' ou 'error'\n\n  /**\r\n   * Lida com o envio do formulário de redefinição de senha.\r\n   * @param {Event} e - O evento de envio do formulário.\r\n   */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"Enviando e-mail...\"); // Mensagem de feedback inicial\n    setMessageType(''); // Limpa o tipo de mensagem anterior\n\n    try {\n      const res = await fetch('/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessage(data.message || 'Instruções enviadas para o seu e-mail.');\n        setMessageType('success');\n      } else {\n        setMessage(data.error || 'Erro ao enviar e-mail. Tente novamente.');\n        setMessageType('error');\n      }\n    } catch (error) {\n      console.error(\"Erro na requisição:\", error);\n      setMessage(\"Erro ao conectar ao servidor. Tente novamente mais tarde.\");\n      setMessageType('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Esqueceu sua senha?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Informe seu e-mail cadastrado no site para enviarmos as instru\\xE7\\xF5es de redefini\\xE7\\xE3o da senha.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Seu e-mail\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Continuar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `message-box ${messageType === 'success' ? 'message-success' : 'message-error'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"4kkzwe6sBRyvoBuDUwBKI5/bez4=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","message","setMessage","messageType","setMessageType","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/FACUL/Terceiro período/TIAPN/2025-1-p3-tiapn-si-grupo-3/src/front/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/forgot.css'; // Importa os estilos CSS\r\n\r\n/**\r\n * Componente para a funcionalidade de esqueci a senha.\r\n * Permite que o usuário insira seu e-mail para receber instruções de redefinição.\r\n */\r\nfunction ForgotPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState(''); // Estado para mensagens de feedback ao usuário\r\n  const [messageType, setMessageType] = useState(''); // 'success' ou 'error'\r\n\r\n  /**\r\n   * Lida com o envio do formulário de redefinição de senha.\r\n   * @param {Event} e - O evento de envio do formulário.\r\n   */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"Enviando e-mail...\"); // Mensagem de feedback inicial\r\n    setMessageType(''); // Limpa o tipo de mensagem anterior\r\n\r\n    try {\r\n      const res = await fetch('/forgot-password', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email })\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setMessage(data.message || 'Instruções enviadas para o seu e-mail.');\r\n        setMessageType('success');\r\n      } else {\r\n        setMessage(data.error || 'Erro ao enviar e-mail. Tente novamente.');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro na requisição:\", error);\r\n      setMessage(\"Erro ao conectar ao servidor. Tente novamente mais tarde.\");\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Esqueceu sua senha?</h1>\r\n      <p>Informe seu e-mail cadastrado no site para enviarmos as instruções de redefinição da senha.</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Seu e-mail\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Continuar</button>\r\n      </form>\r\n      {/* Exibe a mensagem de feedback se houver uma */}\r\n      {message && (\r\n        <p className={`message-box ${messageType === 'success' ? 'message-success' : 'message-error'}`}>\r\n          {message}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}