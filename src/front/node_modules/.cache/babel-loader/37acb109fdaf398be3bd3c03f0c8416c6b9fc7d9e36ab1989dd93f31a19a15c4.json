{"ast":null,"code":"var _jsxFileName = \"D:\\\\FACUL\\\\Terceiro per\\xEDodo\\\\TIAPN\\\\2025-1-p3-tiapn-si-grupo-3\\\\src\\\\front\\\\src\\\\components\\\\SignInForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignInForm() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState(''); // Padronizado para 'senha' e 'setSenha'\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    setMessageType('');\n    if (!email || !senha) {\n      // Usa 'senha'\n      setMessage('Por favor, preencha todos os campos!');\n      setMessageType('error');\n      return;\n    }\n    try {\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          senha\n        }) // Envia 'senha'\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Login bem-sucedido!');\n        setMessageType('success');\n        localStorage.setItem('user', JSON.stringify(data.user));\n        navigate('/home');\n      } else {\n        setMessage(data.error || 'Credenciais inválidas.');\n        setMessageType('error');\n      }\n    } catch (err) {\n      console.error(\"Erro na requisição:\", err);\n      setMessage('Erro ao conectar ao servidor. Tente novamente.');\n      setMessageType('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container sign-in-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Senha\",\n        value: senha // Usa 'senha'\n        ,\n        onChange: e => setSenha(e.target.value) // Usa 'setSenha'\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgot-password\",\n          children: \"Esqueceu a senha?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `message-box ${messageType === 'success' ? 'message-success' : 'message-error'}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(SignInForm, \"DBGJZxFAIhy1w3zf7jl7T50OQ6k=\", false, function () {\n  return [useNavigate];\n});\n_c = SignInForm;\nexport default SignInForm;\nvar _c;\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","SignInForm","_s","email","setEmail","senha","setSenha","message","setMessage","messageType","setMessageType","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","user","error","err","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["D:/FACUL/Terceiro período/TIAPN/2025-1-p3-tiapn-si-grupo-3/src/front/src/components/SignInForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nfunction SignInForm() {\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState(''); // Padronizado para 'senha' e 'setSenha'\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    setMessageType('');\r\n\r\n    if (!email || !senha) { // Usa 'senha'\r\n      setMessage('Por favor, preencha todos os campos!');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, senha }) // Envia 'senha'\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage('Login bem-sucedido!');\r\n        setMessageType('success');\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        navigate('/home');\r\n      } else {\r\n        setMessage(data.error || 'Credenciais inválidas.');\r\n        setMessageType('error');\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erro na requisição:\", err);\r\n      setMessage('Erro ao conectar ao servidor. Tente novamente.');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container sign-in-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Entrar</h1>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Senha\"\r\n          value={senha} // Usa 'senha'\r\n          onChange={(e) => setSenha(e.target.value)} // Usa 'setSenha'\r\n          required\r\n        />\r\n        <button type=\"submit\">Entrar</button>\r\n        <p><Link to=\"/forgot-password\">Esqueceu a senha?</Link></p>\r\n        {message && (\r\n          <p className={`message-box ${messageType === 'success' ? 'message-success' : 'message-error'}`}>\r\n            {message}\r\n          </p>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}