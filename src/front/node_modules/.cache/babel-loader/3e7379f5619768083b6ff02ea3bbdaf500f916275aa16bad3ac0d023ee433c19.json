{"ast":null,"code":"var _jsxFileName = \"D:\\\\FACUL\\\\Terceiro per\\xEDodo\\\\TIAPN\\\\2025-1-p3-tiapn-si-grupo-3\\\\src\\\\front\\\\src\\\\components\\\\SignUpForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n/**\r\n * Componente do formulário de cadastro em múltiplas etapas.\r\n * Gerencia o cadastro de um novo funcionário e seu respectivo administrador.\r\n * @param {object} props - As propriedades do componente.\r\n * @param {function} props.onSignUpSuccess - Callback para ser executado após um cadastro bem-sucedido.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUpForm({\n  onSignUpSuccess\n}) {\n  _s();\n  const [currentStep, setCurrentStep] = useState(0); // Controla a etapa atual do formulário\n  const [message, setMessage] = useState(''); // Estado para mensagens de feedback\n  const [messageType, setMessageType] = useState(''); // 'success' ou 'error'\n\n  // Estado para armazenar os dados do formulário\n  const [formData, setFormData] = useState({\n    nome: '',\n    email: '',\n    senha: '',\n    cargo: '',\n    cpf: '',\n    telefone: '',\n    nascimento: '',\n    rua: '',\n    numero: '',\n    cidade: ''\n  });\n\n  /**\r\n   * Atualiza o estado do formulário conforme o usuário digita.\r\n   * Aplica formatação para CPF e Telefone.\r\n   * @param {Event} e - O evento de mudança do input.\r\n   */\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'telefone') {\n      setFormData(prev => ({\n        ...prev,\n        [name]: formatarTelefone(value)\n      }));\n    } else if (name === 'cpf') {\n      setFormData(prev => ({\n        ...prev,\n        [name]: formatarCPF(value)\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  /**\r\n   * Formata uma string de telefone para o padrão (XX) XXXXX-XXXX ou (XX) XXXX-XXXX.\r\n   * @param {string} value - O valor do telefone.\r\n   * @returns {string} O telefone formatado.\r\n   */\n  const formatarTelefone = value => {\n    let v = value.replace(/\\D/g, ''); // Remove tudo que não é dígito\n    if (v.length > 11) v = v.slice(0, 11); // Limita a 11 dígitos\n\n    // Aplica a formatação\n    v = v.replace(/(\\d{2})(\\d)/, '($1) $2');\n    v = v.replace(/(\\d{5})(\\d)/, '$1-$2');\n    return v;\n  };\n\n  /**\r\n   * Formata uma string de CPF para o padrão XXX.XXX.XXX-XX.\r\n   * @param {string} value - O valor do CPF.\r\n   * @returns {string} O CPF formatado.\r\n   */\n  const formatarCPF = value => {\n    let v = value.replace(/\\D/g, ''); // Remove tudo que não é dígito\n    if (v.length > 11) v = v.slice(0, 11); // Limita a 11 dígitos\n\n    // Aplica a formatação\n    v = v.replace(/(\\d{3})(\\d)/, '$1.$2');\n    v = v.replace(/(\\d{3})(\\d)/, '$1.$2');\n    v = v.replace(/(\\d{3})(\\d{2})$/, '$1-$2');\n    return v;\n  };\n\n  /**\r\n   * Avança para a próxima etapa do formulário, com validação.\r\n   */\n  const nextStep = () => {\n    setMessage(''); // Limpa mensagens anteriores\n    setMessageType('');\n\n    // Validação da Etapa 1\n    if (currentStep === 0) {\n      if (!formData.nome || !formData.email || !formData.senha) {\n        setMessage('Por favor, preencha nome, e-mail e senha para prosseguir.');\n        setMessageType('error');\n        return;\n      }\n      // Validação de e-mail básico\n      if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n        setMessage('Por favor, insira um e-mail válido.');\n        setMessageType('error');\n        return;\n      }\n      // Validação de senha mínima\n      if (formData.senha.length < 6) {\n        setMessage('A senha deve ter pelo menos 6 caracteres.');\n        setMessageType('error');\n        return;\n      }\n    }\n    // Validação da Etapa 2\n    else if (currentStep === 1) {\n      if (!formData.cargo || !formData.cpf || !formData.telefone || !formData.nascimento) {\n        setMessage('Por favor, preencha todos os campos de funcionário para prosseguir.');\n        setMessageType('error');\n        return;\n      }\n      // Validação básica de CPF e telefone\n      if (formData.cpf.replace(/\\D/g, '').length !== 11) {\n        setMessage('Por favor, insira um CPF válido (11 dígitos).');\n        setMessageType('error');\n        return;\n      }\n      if (formData.telefone.replace(/\\D/g, '').length < 10) {\n        setMessage('Por favor, insira um telefone válido (mínimo 10 dígitos com DDD).');\n        setMessageType('error');\n        return;\n      }\n    }\n    setCurrentStep(prev => prev + 1);\n  };\n\n  /**\r\n   * Volta para a etapa anterior do formulário.\r\n   */\n  const prevStep = () => {\n    setMessage(''); // Limpa mensagens\n    setMessageType('');\n    setCurrentStep(prev => prev - 1);\n  };\n\n  /**\r\n   * Lida com o envio final do formulário após todas as etapas.\r\n   * @param {Event} e - O evento de envio do formulário.\r\n   */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(''); // Limpa mensagens anteriores\n    setMessageType('');\n\n    // Validação final de todos os campos antes de enviar\n    if (!formData.nome || !formData.email || !formData.senha || !formData.cargo || !formData.cpf || !formData.telefone || !formData.nascimento || !formData.rua || !formData.numero || !formData.cidade) {\n      setMessage('Por favor, preencha todos os campos do formulário para finalizar o cadastro.');\n      setMessageType('error');\n      return;\n    }\n    try {\n      // 1º passo: cadastrar o funcionário\n      const resFunc = await fetch('http://localhost:3000/funcionario', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nome: formData.nome,\n          cargo: formData.cargo,\n          telefone: formData.telefone.replace(/\\D/g, ''),\n          // Envia apenas dígitos\n          data_nascimento: formData.nascimento,\n          rua: formData.rua,\n          numero: formData.numero,\n          cidade: formData.cidade,\n          cpf: formData.cpf.replace(/\\D/g, '') // Envia apenas dígitos\n        })\n      });\n      if (!resFunc.ok) {\n        const err = await resFunc.json();\n        setMessage(err.error || 'Erro ao cadastrar funcionário.');\n        setMessageType('error');\n        return;\n      }\n      const jsonFunc = await resFunc.json();\n      const funcionarioId = jsonFunc.id; // Assumindo que o ID do funcionário é retornado\n\n      // 2º passo: cadastrar o administrador, informando funcionario_codigo\n      const resAdm = await fetch('http://localhost:3000/administrador', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          senha: formData.senha,\n          funcionario_codigo: funcionarioId // Associa o administrador ao funcionário recém-criado\n        })\n      });\n      if (!resAdm.ok) {\n        const errAdm = await resAdm.json();\n        setMessage(errAdm.error || 'Erro ao cadastrar administrador.');\n        setMessageType('error');\n        return;\n      }\n      setMessage('Cadastro realizado com sucesso!');\n      setMessageType('success');\n      // Limpa o formulário\n      setFormData({\n        nome: '',\n        email: '',\n        senha: '',\n        cargo: '',\n        cpf: '',\n        telefone: '',\n        nascimento: '',\n        rua: '',\n        numero: '',\n        cidade: ''\n      });\n      setCurrentStep(0); // Volta para a primeira etapa\n      onSignUpSuccess(); // Chama o callback para o componente pai (AuthPage)\n    } catch (error) {\n      console.error(\"Erro na requisição:\", error);\n      setMessage('Erro ao conectar ao servidor. Verifique sua conexão ou tente novamente mais tarde.');\n      setMessageType('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container sign-up-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Criar conta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"multiStepForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${currentStep === 0 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"nome\",\n          placeholder: \"Nome completo\",\n          value: formData.nome,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"senha\",\n          placeholder: \"Senha\",\n          value: formData.senha,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: nextStep,\n          children: \"Pr\\xF3ximo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${currentStep === 1 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cargo\",\n          placeholder: \"Cargo\",\n          value: formData.cargo,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cpf\",\n          placeholder: \"CPF\",\n          maxLength: \"14\",\n          value: formData.cpf // O formatarCPF já está sendo chamado no onChange\n          ,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"telefone\",\n          placeholder: \"Telefone\",\n          maxLength: \"15\",\n          value: formData.telefone // O formatarTelefone já está sendo chamado no onChange\n          ,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"nascimento\",\n          placeholder: \"Data de nascimento\",\n          value: formData.nascimento,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: prevStep,\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: nextStep,\n          children: \"Pr\\xF3ximo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${currentStep === 2 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"rua\",\n          placeholder: \"Rua\",\n          value: formData.rua,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"numero\",\n          placeholder: \"N\\xFAmero\",\n          value: formData.numero,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cidade\",\n          placeholder: \"Cidade\",\n          value: formData.cidade,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: prevStep,\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Criar Conta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `message-box ${messageType === 'success' ? 'message-success' : 'message-error'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUpForm, \"8LDB0eDxrke6VbDc81U/tCRwln4=\");\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignUpForm","onSignUpSuccess","_s","currentStep","setCurrentStep","message","setMessage","messageType","setMessageType","formData","setFormData","nome","email","senha","cargo","cpf","telefone","nascimento","rua","numero","cidade","handleChange","e","name","value","target","prev","formatarTelefone","formatarCPF","v","replace","length","slice","nextStep","test","prevStep","handleSubmit","preventDefault","resFunc","fetch","method","headers","body","JSON","stringify","data_nascimento","ok","err","json","error","jsonFunc","funcionarioId","id","resAdm","funcionario_codigo","errAdm","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","maxLength","_c","$RefreshReg$"],"sources":["D:/FACUL/Terceiro período/TIAPN/2025-1-p3-tiapn-si-grupo-3/src/front/src/components/SignUpForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n/**\r\n * Componente do formulário de cadastro em múltiplas etapas.\r\n * Gerencia o cadastro de um novo funcionário e seu respectivo administrador.\r\n * @param {object} props - As propriedades do componente.\r\n * @param {function} props.onSignUpSuccess - Callback para ser executado após um cadastro bem-sucedido.\r\n */\r\nfunction SignUpForm({ onSignUpSuccess }) {\r\n  const [currentStep, setCurrentStep] = useState(0); // Controla a etapa atual do formulário\r\n  const [message, setMessage] = useState(''); // Estado para mensagens de feedback\r\n  const [messageType, setMessageType] = useState(''); // 'success' ou 'error'\r\n\r\n  // Estado para armazenar os dados do formulário\r\n  const [formData, setFormData] = useState({\r\n    nome: '',\r\n    email: '',\r\n    senha: '',\r\n    cargo: '',\r\n    cpf: '',\r\n    telefone: '',\r\n    nascimento: '',\r\n    rua: '',\r\n    numero: '',\r\n    cidade: ''\r\n  });\r\n\r\n  /**\r\n   * Atualiza o estado do formulário conforme o usuário digita.\r\n   * Aplica formatação para CPF e Telefone.\r\n   * @param {Event} e - O evento de mudança do input.\r\n   */\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'telefone') {\r\n      setFormData(prev => ({ ...prev, [name]: formatarTelefone(value) }));\r\n    } else if (name === 'cpf') {\r\n      setFormData(prev => ({ ...prev, [name]: formatarCPF(value) }));\r\n    } else {\r\n      setFormData(prev => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Formata uma string de telefone para o padrão (XX) XXXXX-XXXX ou (XX) XXXX-XXXX.\r\n   * @param {string} value - O valor do telefone.\r\n   * @returns {string} O telefone formatado.\r\n   */\r\n  const formatarTelefone = (value) => {\r\n    let v = value.replace(/\\D/g, ''); // Remove tudo que não é dígito\r\n    if (v.length > 11) v = v.slice(0, 11); // Limita a 11 dígitos\r\n\r\n    // Aplica a formatação\r\n    v = v.replace(/(\\d{2})(\\d)/, '($1) $2');\r\n    v = v.replace(/(\\d{5})(\\d)/, '$1-$2');\r\n    return v;\r\n  };\r\n\r\n  /**\r\n   * Formata uma string de CPF para o padrão XXX.XXX.XXX-XX.\r\n   * @param {string} value - O valor do CPF.\r\n   * @returns {string} O CPF formatado.\r\n   */\r\n  const formatarCPF = (value) => {\r\n    let v = value.replace(/\\D/g, ''); // Remove tudo que não é dígito\r\n    if (v.length > 11) v = v.slice(0, 11); // Limita a 11 dígitos\r\n\r\n    // Aplica a formatação\r\n    v = v.replace(/(\\d{3})(\\d)/, '$1.$2');\r\n    v = v.replace(/(\\d{3})(\\d)/, '$1.$2');\r\n    v = v.replace(/(\\d{3})(\\d{2})$/, '$1-$2');\r\n    return v;\r\n  };\r\n\r\n  /**\r\n   * Avança para a próxima etapa do formulário, com validação.\r\n   */\r\n  const nextStep = () => {\r\n    setMessage(''); // Limpa mensagens anteriores\r\n    setMessageType('');\r\n\r\n    // Validação da Etapa 1\r\n    if (currentStep === 0) {\r\n      if (!formData.nome || !formData.email || !formData.senha) {\r\n        setMessage('Por favor, preencha nome, e-mail e senha para prosseguir.');\r\n        setMessageType('error');\r\n        return;\r\n      }\r\n      // Validação de e-mail básico\r\n      if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n        setMessage('Por favor, insira um e-mail válido.');\r\n        setMessageType('error');\r\n        return;\r\n      }\r\n      // Validação de senha mínima\r\n      if (formData.senha.length < 6) {\r\n        setMessage('A senha deve ter pelo menos 6 caracteres.');\r\n        setMessageType('error');\r\n        return;\r\n      }\r\n    }\r\n    // Validação da Etapa 2\r\n    else if (currentStep === 1) {\r\n      if (!formData.cargo || !formData.cpf || !formData.telefone || !formData.nascimento) {\r\n        setMessage('Por favor, preencha todos os campos de funcionário para prosseguir.');\r\n        setMessageType('error');\r\n        return;\r\n      }\r\n      // Validação básica de CPF e telefone\r\n      if (formData.cpf.replace(/\\D/g, '').length !== 11) {\r\n        setMessage('Por favor, insira um CPF válido (11 dígitos).');\r\n        setMessageType('error');\r\n        return;\r\n      }\r\n      if (formData.telefone.replace(/\\D/g, '').length < 10) {\r\n        setMessage('Por favor, insira um telefone válido (mínimo 10 dígitos com DDD).');\r\n        setMessageType('error');\r\n        return;\r\n      }\r\n    }\r\n\r\n    setCurrentStep(prev => prev + 1);\r\n  };\r\n\r\n  /**\r\n   * Volta para a etapa anterior do formulário.\r\n   */\r\n  const prevStep = () => {\r\n    setMessage(''); // Limpa mensagens\r\n    setMessageType('');\r\n    setCurrentStep(prev => prev - 1);\r\n  };\r\n\r\n  /**\r\n   * Lida com o envio final do formulário após todas as etapas.\r\n   * @param {Event} e - O evento de envio do formulário.\r\n   */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage(''); // Limpa mensagens anteriores\r\n    setMessageType('');\r\n\r\n    // Validação final de todos os campos antes de enviar\r\n    if (\r\n      !formData.nome || !formData.email || !formData.senha ||\r\n      !formData.cargo || !formData.cpf || !formData.telefone || !formData.nascimento ||\r\n      !formData.rua || !formData.numero || !formData.cidade\r\n    ) {\r\n      setMessage('Por favor, preencha todos os campos do formulário para finalizar o cadastro.');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 1º passo: cadastrar o funcionário\r\n      const resFunc = await fetch('http://localhost:3000/funcionario', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          nome: formData.nome,\r\n          cargo: formData.cargo,\r\n          telefone: formData.telefone.replace(/\\D/g, ''), // Envia apenas dígitos\r\n          data_nascimento: formData.nascimento,\r\n          rua: formData.rua,\r\n          numero: formData.numero,\r\n          cidade: formData.cidade,\r\n          cpf: formData.cpf.replace(/\\D/g, '') // Envia apenas dígitos\r\n        })\r\n      });\r\n\r\n      if (!resFunc.ok) {\r\n        const err = await resFunc.json();\r\n        setMessage(err.error || 'Erro ao cadastrar funcionário.');\r\n        setMessageType('error');\r\n        return;\r\n      }\r\n\r\n      const jsonFunc = await resFunc.json();\r\n      const funcionarioId = jsonFunc.id; // Assumindo que o ID do funcionário é retornado\r\n\r\n      // 2º passo: cadastrar o administrador, informando funcionario_codigo\r\n      const resAdm = await fetch('http://localhost:3000/administrador', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          email: formData.email,\r\n          senha: formData.senha,\r\n          funcionario_codigo: funcionarioId // Associa o administrador ao funcionário recém-criado\r\n        })\r\n      });\r\n\r\n      if (!resAdm.ok) {\r\n        const errAdm = await resAdm.json();\r\n        setMessage(errAdm.error || 'Erro ao cadastrar administrador.');\r\n        setMessageType('error');\r\n        return;\r\n      }\r\n\r\n      setMessage('Cadastro realizado com sucesso!');\r\n      setMessageType('success');\r\n      // Limpa o formulário\r\n      setFormData({\r\n        nome: '', email: '', senha: '', cargo: '', cpf: '',\r\n        telefone: '', nascimento: '', rua: '', numero: '', cidade: ''\r\n      });\r\n      setCurrentStep(0); // Volta para a primeira etapa\r\n      onSignUpSuccess(); // Chama o callback para o componente pai (AuthPage)\r\n    } catch (error) {\r\n      console.error(\"Erro na requisição:\", error);\r\n      setMessage('Erro ao conectar ao servidor. Verifique sua conexão ou tente novamente mais tarde.');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container sign-up-container\">\r\n      <h1>Criar conta</h1>\r\n      <form id=\"multiStepForm\" onSubmit={handleSubmit}>\r\n        {/* Etapa 1: Dados básicos do administrador */}\r\n        <div className={`step ${currentStep === 0 ? 'active' : ''}`}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nome\"\r\n            placeholder=\"Nome completo\"\r\n            value={formData.nome}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"senha\"\r\n            placeholder=\"Senha\"\r\n            value={formData.senha}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <button type=\"button\" onClick={nextStep}>Próximo</button>\r\n        </div>\r\n\r\n        {/* Etapa 2: Dados do funcionário (pessoais) */}\r\n        <div className={`step ${currentStep === 1 ? 'active' : ''}`}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"cargo\"\r\n            placeholder=\"Cargo\"\r\n            value={formData.cargo}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"cpf\"\r\n            placeholder=\"CPF\"\r\n            maxLength=\"14\"\r\n            value={formData.cpf} // O formatarCPF já está sendo chamado no onChange\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"telefone\"\r\n            placeholder=\"Telefone\"\r\n            maxLength=\"15\"\r\n            value={formData.telefone} // O formatarTelefone já está sendo chamado no onChange\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            name=\"nascimento\"\r\n            placeholder=\"Data de nascimento\"\r\n            value={formData.nascimento}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <button type=\"button\" onClick={prevStep}>Voltar</button>\r\n          <button type=\"button\" onClick={nextStep}>Próximo</button>\r\n        </div>\r\n\r\n        {/* Etapa 3: Dados de endereço do funcionário */}\r\n        <div className={`step ${currentStep === 2 ? 'active' : ''}`}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"rua\"\r\n            placeholder=\"Rua\"\r\n            value={formData.rua}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"numero\"\r\n            placeholder=\"Número\"\r\n            value={formData.numero}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"cidade\"\r\n            placeholder=\"Cidade\"\r\n            value={formData.cidade}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <button type=\"button\" onClick={prevStep}>Voltar</button>\r\n          <button type=\"submit\">Criar Conta</button>\r\n        </div>\r\n      </form>\r\n      {/* Exibe a mensagem de feedback se houver uma */}\r\n      {message && (\r\n        <p className={`message-box ${messageType === 'success' ? 'message-success' : 'message-error'}`}>\r\n          {message}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}