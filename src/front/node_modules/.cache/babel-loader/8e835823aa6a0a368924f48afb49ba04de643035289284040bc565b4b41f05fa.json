{"ast":null,"code":"var _jsxFileName = \"D:\\\\FACUL\\\\Terceiro per\\xEDodo\\\\TIAPN\\\\2025-1-p3-tiapn-si-grupo-3\\\\src\\\\front\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport '../styles/forgot.css'; // Reutilizando os estilos de forgot password\n\n/**\r\n * Componente para redefinição de senha.\r\n * Recebe um token da URL e permite que o usuário defina uma nova senha.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState(''); // Estado para mensagens de feedback\n  const [messageType, setMessageType] = useState(''); // 'success' ou 'error'\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [token, setToken] = useState(null);\n\n  // Efeito para extrair o token da URL ao carregar o componente\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const extractedToken = params.get('token');\n    if (extractedToken) {\n      setToken(extractedToken);\n    } else {\n      setMessage('Token de redefinição de senha não encontrado.');\n      setMessageType('error');\n    }\n  }, [location.search]); // Dependência em location.search para re-executar se a URL mudar\n\n  /**\r\n   * Lida com o envio do formulário para redefinir a senha.\r\n   * @param {Event} e - O evento de envio do formulário.\r\n   */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(''); // Limpa mensagens anteriores\n    setMessageType('');\n    if (!token) {\n      setMessage('Token de redefinição de senha inválido ou ausente.');\n      setMessageType('error');\n      return;\n    }\n\n    // Validação básica da senha (opcional, adicione mais complexidade se necessário)\n    if (newPassword.length < 6) {\n      setMessage('A nova senha deve ter pelo menos 6 caracteres.');\n      setMessageType('error');\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:3000/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token,\n          novaSenha: newPassword\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessage(data.message || 'Senha redefinida com sucesso!');\n        setMessageType('success');\n        // Redireciona para a página de login após um pequeno atraso para o usuário ver a mensagem\n        setTimeout(() => {\n          navigate('/login');\n        }, 2000);\n      } else {\n        setMessage(data.error || 'Erro ao redefinir senha. Tente novamente.');\n        setMessageType('error');\n      }\n    } catch (err) {\n      console.error(\"Erro na requisição:\", err);\n      setMessage('Erro ao conectar ao servidor. Tente novamente mais tarde.');\n      setMessageType('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redefinir senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Crie uma nova senha forte para sua conta.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Nova senha\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Redefinir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `message-box ${messageType === 'success' ? 'message-success' : 'message-error'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"uZYYoOWE45bBUSSqR5XzJG4h780=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","message","setMessage","messageType","setMessageType","location","navigate","token","setToken","params","URLSearchParams","search","extractedToken","get","handleSubmit","e","preventDefault","length","res","fetch","method","headers","body","JSON","stringify","novaSenha","data","json","ok","setTimeout","error","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/FACUL/Terceiro período/TIAPN/2025-1-p3-tiapn-si-grupo-3/src/front/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport '../styles/forgot.css'; // Reutilizando os estilos de forgot password\r\n\r\n/**\r\n * Componente para redefinição de senha.\r\n * Recebe um token da URL e permite que o usuário defina uma nova senha.\r\n */\r\nfunction ResetPassword() {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState(''); // Estado para mensagens de feedback\r\n  const [messageType, setMessageType] = useState(''); // 'success' ou 'error'\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [token, setToken] = useState(null);\r\n\r\n  // Efeito para extrair o token da URL ao carregar o componente\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const extractedToken = params.get('token');\r\n    if (extractedToken) {\r\n      setToken(extractedToken);\r\n    } else {\r\n      setMessage('Token de redefinição de senha não encontrado.');\r\n      setMessageType('error');\r\n    }\r\n  }, [location.search]); // Dependência em location.search para re-executar se a URL mudar\r\n\r\n  /**\r\n   * Lida com o envio do formulário para redefinir a senha.\r\n   * @param {Event} e - O evento de envio do formulário.\r\n   */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage(''); // Limpa mensagens anteriores\r\n    setMessageType('');\r\n\r\n    if (!token) {\r\n      setMessage('Token de redefinição de senha inválido ou ausente.');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n\r\n    // Validação básica da senha (opcional, adicione mais complexidade se necessário)\r\n    if (newPassword.length < 6) {\r\n      setMessage('A nova senha deve ter pelo menos 6 caracteres.');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:3000/reset-password', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ token, novaSenha: newPassword })\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setMessage(data.message || 'Senha redefinida com sucesso!');\r\n        setMessageType('success');\r\n        // Redireciona para a página de login após um pequeno atraso para o usuário ver a mensagem\r\n        setTimeout(() => {\r\n          navigate('/login');\r\n        }, 2000);\r\n      } else {\r\n        setMessage(data.error || 'Erro ao redefinir senha. Tente novamente.');\r\n        setMessageType('error');\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erro na requisição:\", err);\r\n      setMessage('Erro ao conectar ao servidor. Tente novamente mais tarde.');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Redefinir senha</h1>\r\n      <p>Crie uma nova senha forte para sua conta.</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Nova senha\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Redefinir</button>\r\n      </form>\r\n      {/* Exibe a mensagem de feedback se houver uma */}\r\n      {message && (\r\n        <p className={`message-box ${messageType === 'success' ? 'message-success' : 'message-error'}`}>\r\n          {message}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}